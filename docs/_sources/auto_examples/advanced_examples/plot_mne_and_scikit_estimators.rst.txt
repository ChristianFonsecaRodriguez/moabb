
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/advanced_examples/plot_mne_and_scikit_estimators.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_advanced_examples_plot_mne_and_scikit_estimators.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_advanced_examples_plot_mne_and_scikit_estimators.py:


==========================
MNE Epochs-based pipelines
==========================

This example shows how to use machine learning pipeline based on MNE Epochs
instead of Numpy arrays. This is useful to make the most of the MNE code base
and to embed EEG specific code inside sklearn pipelines.

We will compare different pipelines for P300:
- Logistic regression, based on MNE Epochs
- XDAWN and Logistic Regression (LR), based on MNE Epochs
- XDAWN extended covariance and LR on tangent space, based on Numpy

.. GENERATED FROM PYTHON SOURCE LINES 16-49

.. code-block:: default

    # Authors: Sylvain Chevallier
    #
    # License: BSD (3-clause)
    # sphinx_gallery_thumbnail_number = 2

    import warnings

    import matplotlib.pyplot as plt
    import pandas as pd
    from mne.decoding import Vectorizer
    from mne.preprocessing import Xdawn
    from pyriemann.estimation import XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.linear_model import LogisticRegression
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import StandardScaler

    import moabb
    from moabb.analysis.meta_analysis import (  # noqa: E501
        compute_dataset_statistics,
        find_significant_differences,
    )
    from moabb.analysis.plotting import paired_plot, summary_plot
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import CrossSessionEvaluation
    from moabb.paradigms import P300


    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)
    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 50-54

Loading Dataset
---------------

Load 2 subjects of BNCI 2014-009 dataset, with 3 session each

.. GENERATED FROM PYTHON SOURCE LINES 54-60

.. code-block:: default


    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:3]
    datasets = [dataset]
    paradigm = P300()








.. GENERATED FROM PYTHON SOURCE LINES 61-71

Get Data (optional)
-------------------

To get access to the EEG signals downloaded from the dataset, you could
use ``dataset.get_data([subject_id)`` to obtain the EEG as MNE Epochs, stored
in a dictionary of sessions and runs.
The ``paradigm.get_data(dataset=dataset, subjects=[subject_id])`` allows to
obtain the preprocessed EEG data, the labels and the meta information. By
default, the EEG is return as a Numpy array. With ``return_epochs=True``, MNE
Epochs are returned.

.. GENERATED FROM PYTHON SOURCE LINES 71-79

.. code-block:: default


    subject_list = [1]
    sessions = dataset.get_data(subject_list)
    X, labels, meta = paradigm.get_data(dataset=dataset, subjects=subject_list)
    epochs, labels, meta = paradigm.get_data(
        dataset=dataset, subjects=subject_list, return_epochs=True
    )








.. GENERATED FROM PYTHON SOURCE LINES 80-91

A Simple MNE Pipeline
---------------------

Using ``return_epochs=True`` in the evaluation, it is possible to design a
pipeline based on MNE Epochs input. Let's create a simple one, that
reshape the input data from epochs, rescale the data and uses a logistic
regression to classify the data. We will need to write a basic Transformer
estimator, that complies with
`sklearn convention <https://scikit-learn.org/stable/developers/develop.html>`_.
This transformer will extract the data from an input Epoch, and reshapes into
2D array.

.. GENERATED FROM PYTHON SOURCE LINES 91-107

.. code-block:: default



    class MyVectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y=None):
            arr = X.get_data()
            self.features_shape_ = arr.shape[1:]
            return self

        def transform(self, X, y=None):
            arr = X.get_data()
            return arr.reshape(len(arr), -1)









.. GENERATED FROM PYTHON SOURCE LINES 108-111

We will define a pipeline that is based on this new class, using a scaler
and a logistic regression. This pipeline is evaluated across session using
ROC-AUC metric.

.. GENERATED FROM PYTHON SOURCE LINES 111-126

.. code-block:: default


    mne_ppl = {}
    mne_ppl["MNE LR"] = make_pipeline(
        MyVectorizer(), StandardScaler(), LogisticRegression(penalty="l1", solver="liblinear")
    )

    mne_eval = CrossSessionEvaluation(
        paradigm=paradigm,
        datasets=datasets,
        suffix="examples",
        overwrite=True,
        return_epochs=True,
    )
    mne_res = mne_eval.process(mne_ppl)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-CrossSession:   0%|          | 0/3 [00:00<?, ?it/s]    009-2014-CrossSession:  33%|###3      | 1/3 [00:03<00:07,  3.84s/it]    009-2014-CrossSession:  67%|######6   | 2/3 [00:06<00:03,  3.39s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 1.02k/18.5M [00:00<30:24, 10.2kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:06, 99.2kB/s][A
      0%|                                      | 33.8k/18.5M [00:00<02:24, 128kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:11, 141kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:29, 206kB/s][A
      1%|▏                                      | 104k/18.5M [00:00<01:28, 208kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:20, 229kB/s][A
      1%|▎                                      | 156k/18.5M [00:00<01:19, 230kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:17, 237kB/s][A
      1%|▍                                      | 214k/18.5M [00:01<01:09, 263kB/s][A
      1%|▌                                      | 247k/18.5M [00:01<01:05, 281kB/s][A
      2%|▌                                      | 280k/18.5M [00:01<01:02, 294kB/s][A
      2%|▋                                      | 312k/18.5M [00:01<01:00, 302kB/s][A
      2%|▋                                      | 345k/18.5M [00:01<00:59, 308kB/s][A
      2%|▊                                      | 378k/18.5M [00:01<00:58, 312kB/s][A
      2%|▉                                      | 427k/18.5M [00:01<00:49, 364kB/s][A
      3%|█                                      | 476k/18.5M [00:01<00:45, 400kB/s][A
      3%|█                                      | 525k/18.5M [00:01<00:42, 424kB/s][A
      3%|█▏                                     | 591k/18.5M [00:01<00:36, 490kB/s][A
      3%|█▎                                     | 640k/18.5M [00:02<00:36, 488kB/s][A
      4%|█▍                                     | 706k/18.5M [00:02<00:33, 532kB/s][A
      4%|█▌                                     | 771k/18.5M [00:02<00:31, 563kB/s][A
      5%|█▊                                     | 853k/18.5M [00:02<00:27, 636kB/s][A
      5%|█▉                                     | 935k/18.5M [00:02<00:25, 684kB/s][A
      6%|██                                    | 1.03M/18.5M [00:02<00:23, 754kB/s][A
      6%|██▎                                   | 1.13M/18.5M [00:02<00:21, 813kB/s][A
      7%|██▍                                   | 1.21M/18.5M [00:02<00:21, 811kB/s][A
      7%|██▋                                   | 1.33M/18.5M [00:02<00:19, 904kB/s][A
      8%|██▉                                   | 1.43M/18.5M [00:02<00:18, 919kB/s][A
      8%|███▏                                  | 1.54M/18.5M [00:03<00:17, 982kB/s][A
      9%|███▎                                 | 1.66M/18.5M [00:03<00:16, 1.02MB/s][A
     10%|███▌                                 | 1.79M/18.5M [00:03<00:15, 1.10MB/s][A
     10%|███▊                                 | 1.92M/18.5M [00:03<00:14, 1.16MB/s][A
     11%|████                                 | 2.07M/18.5M [00:03<00:13, 1.24MB/s][A
     12%|████▍                                | 2.21M/18.5M [00:03<00:12, 1.30MB/s][A
     13%|████▋                                | 2.38M/18.5M [00:03<00:11, 1.39MB/s][A
     14%|█████                                | 2.54M/18.5M [00:03<00:10, 1.45MB/s][A
     15%|█████▎                               | 2.69M/18.5M [00:03<00:10, 1.45MB/s][A
     16%|█████▊                               | 2.88M/18.5M [00:03<00:09, 1.58MB/s][A
     17%|██████▏                              | 3.08M/18.5M [00:04<00:09, 1.68MB/s][A
     18%|██████▌                              | 3.29M/18.5M [00:04<00:08, 1.81MB/s][A
     19%|██████▉                              | 3.48M/18.5M [00:04<00:08, 1.79MB/s][A
     20%|███████▍                             | 3.70M/18.5M [00:04<00:07, 1.93MB/s][A
     21%|███████▉                             | 3.95M/18.5M [00:04<00:07, 2.05MB/s][A
     22%|████████▎                            | 4.16M/18.5M [00:04<00:06, 2.07MB/s][A
     24%|████████▊                            | 4.44M/18.5M [00:04<00:06, 2.26MB/s][A
     26%|█████████▍                           | 4.74M/18.5M [00:04<00:05, 2.44MB/s][A
     27%|██████████                           | 5.03M/18.5M [00:04<00:05, 2.58MB/s][A
     29%|██████████▋                          | 5.34M/18.5M [00:05<00:04, 2.72MB/s][A
     31%|███████████▎                         | 5.69M/18.5M [00:05<00:04, 2.92MB/s][A
     33%|████████████                         | 6.03M/18.5M [00:05<00:04, 3.06MB/s][A
     35%|████████████▊                        | 6.41M/18.5M [00:05<00:03, 3.22MB/s][A
     37%|█████████████▌                       | 6.80M/18.5M [00:05<00:03, 3.41MB/s][A
     39%|██████████████▎                      | 7.18M/18.5M [00:05<00:03, 3.50MB/s][A
     41%|███████████████▏                     | 7.62M/18.5M [00:05<00:02, 3.76MB/s][A
     44%|████████████████▏                    | 8.08M/18.5M [00:05<00:02, 3.95MB/s][A
     46%|█████████████████                    | 8.52M/18.5M [00:05<00:02, 4.07MB/s][A
     49%|██████████████████                   | 9.04M/18.5M [00:05<00:02, 4.40MB/s][A
     52%|███████████████████▏                 | 9.59M/18.5M [00:06<00:01, 4.65MB/s][A
     55%|████████████████████▎                | 10.2M/18.5M [00:06<00:01, 4.97MB/s][A
     58%|█████████████████████▍               | 10.8M/18.5M [00:06<00:01, 5.22MB/s][A
     62%|██████████████████████▊              | 11.4M/18.5M [00:06<00:01, 5.53MB/s][A
     65%|████████████████████████▏            | 12.1M/18.5M [00:06<00:01, 5.85MB/s][A
     69%|█████████████████████████▌           | 12.8M/18.5M [00:06<00:00, 6.22MB/s][A
     73%|███████████████████████████          | 13.6M/18.5M [00:06<00:00, 6.54MB/s][A
     77%|████████████████████████████▋        | 14.3M/18.5M [00:06<00:00, 6.87MB/s][A
     82%|██████████████████████████████▎      | 15.2M/18.5M [00:06<00:00, 7.32MB/s][A
     87%|████████████████████████████████     | 16.0M/18.5M [00:06<00:00, 7.63MB/s][A
     91%|█████████████████████████████████▊   | 16.9M/18.5M [00:07<00:00, 7.96MB/s][A
     97%|███████████████████████████████████▋ | 17.9M/18.5M [00:07<00:00, 8.39MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 21.3GB/s]
    009-2014-CrossSession: 100%|##########| 3/3 [00:20<00:00,  7.85s/it]    009-2014-CrossSession: 100%|##########| 3/3 [00:20<00:00,  6.69s/it]




.. GENERATED FROM PYTHON SOURCE LINES 127-135

Advanced MNE Pipeline
---------------------

In some case, the MNE pipeline should have access to the original labels from
the dataset. This is the case for the XDAWN code of MNE. One could pass
`mne_labels` to evaluation in order to keep this label.
As an example, we will define a pipeline that computes an XDAWN filter, rescale,
then apply a logistic regression.

.. GENERATED FROM PYTHON SOURCE LINES 135-153

.. code-block:: default


    mne_adv = {}
    mne_adv["XDAWN LR"] = make_pipeline(
        Xdawn(n_components=5, reg="ledoit_wolf", correct_overlap=False),
        Vectorizer(),
        StandardScaler(),
        LogisticRegression(penalty="l1", solver="liblinear"),
    )
    adv_eval = CrossSessionEvaluation(
        paradigm=paradigm,
        datasets=datasets,
        suffix="examples",
        overwrite=True,
        return_epochs=True,
        mne_labels=True,
    )
    adv_res = mne_eval.process(mne_adv)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-CrossSession:   0%|          | 0/3 [00:00<?, ?it/s]/home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    009-2014-CrossSession:  33%|###3      | 1/3 [00:04<00:08,  4.18s/it]/home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    009-2014-CrossSession:  67%|######6   | 2/3 [00:07<00:03,  3.63s/it]/home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/mne/utils/check.py:92: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
      LooseVersion(library.__version__) < LooseVersion(min_version):
    009-2014-CrossSession: 100%|##########| 3/3 [00:12<00:00,  4.45s/it]    009-2014-CrossSession: 100%|##########| 3/3 [00:12<00:00,  4.28s/it]




.. GENERATED FROM PYTHON SOURCE LINES 154-160

Numpy-based Pipeline
--------------------

For the comparison, we will define a Numpy-based pipeline that relies on
pyriemann to estimate XDAWN-extended covariance matrices that are projected
on the tangent space and classified with a logistic regression.

.. GENERATED FROM PYTHON SOURCE LINES 160-175

.. code-block:: default


    sk_ppl = {}
    sk_ppl["RG LR"] = make_pipeline(
        XdawnCovariances(nfilter=5, estimator="lwf", xdawn_estimator="scm"),
        TangentSpace(),
        LogisticRegression(penalty="l1", solver="liblinear"),
    )
    sk_eval = CrossSessionEvaluation(
        paradigm=paradigm,
        datasets=datasets,
        suffix="examples",
        overwrite=True,
    )
    sk_res = sk_eval.process(sk_ppl)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-CrossSession:   0%|          | 0/3 [00:00<?, ?it/s]    009-2014-CrossSession:  33%|###3      | 1/3 [00:09<00:19,  9.56s/it]    009-2014-CrossSession:  67%|######6   | 2/3 [00:19<00:09,  9.81s/it]    009-2014-CrossSession: 100%|##########| 3/3 [00:29<00:00,  9.82s/it]    009-2014-CrossSession: 100%|##########| 3/3 [00:29<00:00,  9.79s/it]




.. GENERATED FROM PYTHON SOURCE LINES 176-182

Combining Results
-----------------

Even if the results have been obtained by different evaluation processes, it
is possible to combine the resulting DataFrames to analyze and plot the
results.

.. GENERATED FROM PYTHON SOURCE LINES 182-185

.. code-block:: default


    all_res = pd.concat([mne_res, adv_res, sk_res])








.. GENERATED FROM PYTHON SOURCE LINES 186-187

We could compare the Euclidean and Riemannian performance using a `paired_plot`

.. GENERATED FROM PYTHON SOURCE LINES 187-190

.. code-block:: default


    paired_plot(all_res, "XDAWN LR", "RG LR")




.. image:: /auto_examples/advanced_examples/images/sphx_glr_plot_mne_and_scikit_estimators_001.png
    :alt: plot mne and scikit estimators
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 1100x850 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 191-193

All the results could be compared and statistical analysis could highlight the
differences between pipelines.

.. GENERATED FROM PYTHON SOURCE LINES 193-198

.. code-block:: default


    stats = compute_dataset_statistics(all_res)
    P, T = find_significant_differences(stats)
    summary_plot(P, T)
    plt.show()



.. image:: /auto_examples/advanced_examples/images/sphx_glr_plot_mne_and_scikit_estimators_002.png
    :alt: Algorithm comparison
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.177 seconds)


.. _sphx_glr_download_auto_examples_advanced_examples_plot_mne_and_scikit_estimators.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mne_and_scikit_estimators.py <plot_mne_and_scikit_estimators.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mne_and_scikit_estimators.ipynb <plot_mne_and_scikit_estimators.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
