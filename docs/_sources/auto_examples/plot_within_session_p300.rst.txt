
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_within_session_p300.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_within_session_p300.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_within_session_p300.py:


===========================
Within Session P300
===========================

This example shows how to perform a within session analysis on three different
P300 datasets.

We will compare two pipelines :

- Riemannian geometry
- XDAWN with Linear Discriminant Analysis

We will use the P300 paradigm, which uses the AUC as metric.

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    # Authors: Pedro Rodrigues <pedro.rodrigues01@gmail.com>
    #
    # License: BSD (3-clause)

    import warnings

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns
    from pyriemann.estimation import Xdawn, XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.pipeline import make_pipeline

    import moabb
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import P300






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)




.. GENERATED FROM PYTHON SOURCE LINES 39-40

getting rid of the warnings about the future

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default

    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)

    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 46-50

This is an auxiliary transformer that allows one to vectorize data
structures in a pipeline For instance, in the case of an X with dimensions
Nt x Nc x Ns, one might be interested in a new data structure with
dimensions Nt x (Nc.Ns)

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default



    class Vectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y):
            """fit."""
            return self

        def transform(self, X):
            """transform. """
            return np.reshape(X, (X.shape[0], -1))









.. GENERATED FROM PYTHON SOURCE LINES 66-70

Create Pipelines
----------------

Pipelines must be a dict of sklearn pipeline transformer.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default



    pipelines = {}








.. GENERATED FROM PYTHON SOURCE LINES 75-78

We have to do this because the classes are called 'Target' and 'NonTarget'
but the evaluation function uses a LabelEncoder, transforming them
to 0 and 1

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default

    labels_dict = {"Target": 1, "NonTarget": 0}

    pipelines["RG+LDA"] = make_pipeline(
        XdawnCovariances(
            nfilter=2, classes=[labels_dict["Target"]], estimator="lwf", xdawn_estimator="scm"
        ),
        TangentSpace(),
        LDA(solver="lsqr", shrinkage="auto"),
    )

    pipelines["Xdw+LDA"] = make_pipeline(
        Xdawn(nfilter=2, estimator="scm"), Vectorizer(), LDA(solver="lsqr", shrinkage="auto")
    )








.. GENERATED FROM PYTHON SOURCE LINES 93-103

Evaluation
----------

We define the paradigm (P300) and use all three datasets available for it.
The evaluation will return a DataFrame containing a single AUC score for
each subject / session of the dataset, and for each pipeline.

Results are saved into the database, so that if you add a new pipeline, it
will not run again the evaluation unless a parameter has changed. Results can
be overwritten if necessary.

.. GENERATED FROM PYTHON SOURCE LINES 103-114

.. code-block:: default


    paradigm = P300(resample=128)
    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]
    overwrite = True  # set to True if we want to overwrite cached results
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=overwrite
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-WithinSession:   0%|          | 0/2 [00:00<?, ?it/s]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 1.02k/18.5M [00:00<30:11, 10.2kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:06, 99.3kB/s][A
      0%|                                      | 34.8k/18.5M [00:00<02:18, 133kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:11, 140kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:29, 207kB/s][A
      1%|▏                                      | 104k/18.5M [00:00<01:28, 209kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:20, 230kB/s][A
      1%|▎                                      | 156k/18.5M [00:00<01:19, 232kB/s][A
      1%|▍                                      | 186k/18.5M [00:00<01:11, 255kB/s][A
      1%|▍                                      | 232k/18.5M [00:01<00:57, 318kB/s][A
      1%|▌                                      | 265k/18.5M [00:01<00:56, 321kB/s][A
      2%|▋                                      | 312k/18.5M [00:01<00:49, 367kB/s][A
      2%|▊                                      | 361k/18.5M [00:01<00:45, 400kB/s][A
      2%|▉                                      | 427k/18.5M [00:01<00:38, 475kB/s][A
      3%|█                                      | 493k/18.5M [00:01<00:34, 529kB/s][A
      3%|█▏                                     | 558k/18.5M [00:01<00:31, 566kB/s][A
      3%|█▎                                     | 624k/18.5M [00:01<00:30, 592kB/s][A
      4%|█▍                                     | 706k/18.5M [00:01<00:27, 657kB/s][A
      4%|█▋                                     | 772k/18.5M [00:01<00:26, 658kB/s][A
      5%|█▊                                     | 853k/18.5M [00:02<00:25, 703kB/s][A
      5%|█▉                                     | 935k/18.5M [00:02<00:23, 738kB/s][A
      6%|██                                    | 1.03M/18.5M [00:02<00:21, 810kB/s][A
      6%|██▎                                   | 1.15M/18.5M [00:02<00:19, 904kB/s][A
      7%|██▌                                   | 1.26M/18.5M [00:02<00:17, 974kB/s][A
      8%|██▊                                  | 1.39M/18.5M [00:02<00:16, 1.07MB/s][A
      8%|███                                  | 1.52M/18.5M [00:02<00:14, 1.14MB/s][A
      9%|███▎                                 | 1.67M/18.5M [00:02<00:13, 1.23MB/s][A
     10%|███▋                                 | 1.82M/18.5M [00:02<00:12, 1.31MB/s][A
     11%|███▉                                 | 1.97M/18.5M [00:02<00:12, 1.35MB/s][A
     11%|████▏                                | 2.10M/18.5M [00:03<00:12, 1.35MB/s][A
     12%|████▍                                | 2.24M/18.5M [00:03<00:12, 1.35MB/s][A
     13%|████▊                                | 2.41M/18.5M [00:03<00:11, 1.46MB/s][A
     14%|█████▏                               | 2.62M/18.5M [00:03<00:09, 1.65MB/s][A
     15%|█████▋                               | 2.85M/18.5M [00:03<00:08, 1.84MB/s][A
     17%|██████▏                              | 3.10M/18.5M [00:03<00:07, 2.00MB/s][A
     18%|██████▋                              | 3.34M/18.5M [00:03<00:07, 2.13MB/s][A
     20%|███████▏                             | 3.62M/18.5M [00:03<00:06, 2.32MB/s][A
     21%|███████▊                             | 3.88M/18.5M [00:03<00:06, 2.40MB/s][A
     23%|████████▎                            | 4.18M/18.5M [00:03<00:05, 2.56MB/s][A
     24%|█████████                            | 4.52M/18.5M [00:04<00:04, 2.82MB/s][A
     26%|█████████▋                           | 4.85M/18.5M [00:04<00:04, 2.95MB/s][A
     28%|██████████▍                          | 5.24M/18.5M [00:04<00:04, 3.17MB/s][A
     31%|███████████▎                         | 5.67M/18.5M [00:04<00:03, 3.48MB/s][A
     33%|████████████                         | 6.06M/18.5M [00:04<00:03, 3.61MB/s][A
     35%|█████████████                        | 6.54M/18.5M [00:04<00:03, 3.93MB/s][A
     38%|██████████████                       | 7.05M/18.5M [00:04<00:02, 4.27MB/s][A
     41%|███████████████                      | 7.57M/18.5M [00:04<00:02, 4.55MB/s][A
     44%|████████████████▎                    | 8.14M/18.5M [00:04<00:02, 4.89MB/s][A
     47%|█████████████████▌                   | 8.77M/18.5M [00:04<00:01, 5.21MB/s][A
     51%|██████████████████▊                  | 9.44M/18.5M [00:05<00:01, 5.65MB/s][A
     55%|████████████████████▎                | 10.1M/18.5M [00:05<00:01, 6.06MB/s][A
     59%|█████████████████████▊               | 10.9M/18.5M [00:05<00:01, 6.48MB/s][A
     63%|███████████████████████▍             | 11.7M/18.5M [00:05<00:00, 6.96MB/s][A
     68%|█████████████████████████▏           | 12.6M/18.5M [00:05<00:00, 7.52MB/s][A
     73%|██████████████████████████▉          | 13.5M/18.5M [00:05<00:00, 8.01MB/s][A
     78%|█████████████████████████████        | 14.5M/18.5M [00:05<00:00, 8.62MB/s][A
     84%|███████████████████████████████▏     | 15.6M/18.5M [00:05<00:00, 9.30MB/s][A
     91%|█████████████████████████████████▌   | 16.8M/18.5M [00:05<00:00, 9.95MB/s][A
     97%|███████████████████████████████████▉ | 18.0M/18.5M [00:05<00:00, 10.6MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 23.3GB/s]
    009-2014-WithinSession:  50%|#####     | 1/2 [00:16<00:16, 16.13s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 1.02k/18.5M [00:00<30:09, 10.2kB/s][A
      0%|                                      | 17.4k/18.5M [00:00<03:04, 100kB/s][A
      0%|                                      | 33.8k/18.5M [00:00<02:23, 129kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:09, 143kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:28, 208kB/s][A
      1%|▏                                      | 104k/18.5M [00:00<01:27, 210kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:19, 232kB/s][A
      1%|▎                                      | 165k/18.5M [00:00<01:10, 261kB/s][A
      1%|▍                                      | 198k/18.5M [00:00<01:05, 281kB/s][A
      1%|▍                                      | 230k/18.5M [00:01<01:02, 295kB/s][A
      1%|▌                                      | 263k/18.5M [00:01<01:00, 304kB/s][A
      2%|▌                                      | 296k/18.5M [00:01<00:58, 311kB/s][A
      2%|▋                                      | 329k/18.5M [00:01<00:57, 315kB/s][A
      2%|▊                                      | 378k/18.5M [00:01<00:49, 368kB/s][A
      2%|▊                                      | 415k/18.5M [00:01<00:49, 368kB/s][A
      2%|▉                                      | 460k/18.5M [00:01<00:46, 392kB/s][A
      3%|█                                      | 509k/18.5M [00:01<00:42, 421kB/s][A
      3%|█▏                                     | 558k/18.5M [00:01<00:40, 440kB/s][A
      3%|█▎                                     | 603k/18.5M [00:01<00:40, 443kB/s][A
      4%|█▍                                     | 673k/18.5M [00:02<00:34, 517kB/s][A
      4%|█▌                                     | 746k/18.5M [00:02<00:30, 583kB/s][A
      4%|█▋                                     | 813k/18.5M [00:02<00:29, 608kB/s][A
      5%|█▊                                     | 874k/18.5M [00:02<00:28, 610kB/s][A
      5%|██                                     | 956k/18.5M [00:02<00:26, 672kB/s][A
      6%|██                                    | 1.02M/18.5M [00:02<00:26, 671kB/s][A
      6%|██▎                                   | 1.12M/18.5M [00:02<00:23, 741kB/s][A
      7%|██▌                                   | 1.23M/18.5M [00:02<00:20, 861kB/s][A
      7%|██▋                                   | 1.33M/18.5M [00:02<00:19, 896kB/s][A
      8%|██▉                                   | 1.42M/18.5M [00:02<00:19, 896kB/s][A
      8%|███                                   | 1.51M/18.5M [00:03<00:18, 897kB/s][A
      9%|███▎                                 | 1.64M/18.5M [00:03<00:16, 1.02MB/s][A
     10%|███▌                                 | 1.79M/18.5M [00:03<00:14, 1.15MB/s][A
     10%|███▊                                 | 1.92M/18.5M [00:03<00:13, 1.20MB/s][A
     11%|████                                 | 2.07M/18.5M [00:03<00:12, 1.28MB/s][A
     12%|████▍                                | 2.25M/18.5M [00:03<00:11, 1.43MB/s][A
     13%|████▊                                | 2.43M/18.5M [00:03<00:10, 1.51MB/s][A
     14%|█████▏                               | 2.61M/18.5M [00:03<00:09, 1.59MB/s][A
     15%|█████▌                               | 2.80M/18.5M [00:03<00:09, 1.70MB/s][A
     16%|█████▉                               | 3.00M/18.5M [00:03<00:08, 1.78MB/s][A
     17%|██████▎                              | 3.18M/18.5M [00:04<00:08, 1.79MB/s][A
     18%|██████▋                              | 3.38M/18.5M [00:04<00:08, 1.84MB/s][A
     20%|███████▎                             | 3.64M/18.5M [00:04<00:07, 2.07MB/s][A
     21%|███████▊                             | 3.92M/18.5M [00:04<00:06, 2.28MB/s][A
     23%|████████▍                            | 4.23M/18.5M [00:04<00:05, 2.49MB/s][A
     25%|█████████▏                           | 4.57M/18.5M [00:04<00:05, 2.76MB/s][A
     27%|█████████▊                           | 4.92M/18.5M [00:04<00:04, 2.95MB/s][A
     29%|██████████▌                          | 5.31M/18.5M [00:04<00:04, 3.24MB/s][A
     31%|███████████▍                         | 5.70M/18.5M [00:04<00:03, 3.43MB/s][A
     33%|████████████▏                        | 6.11M/18.5M [00:04<00:03, 3.62MB/s][A
     35%|█████████████                        | 6.57M/18.5M [00:05<00:03, 3.91MB/s][A
     38%|██████████████                       | 7.05M/18.5M [00:05<00:02, 4.08MB/s][A
     41%|███████████████                      | 7.57M/18.5M [00:05<00:02, 4.42MB/s][A
     44%|████████████████▎                    | 8.14M/18.5M [00:05<00:02, 4.73MB/s][A
     47%|█████████████████▍                   | 8.73M/18.5M [00:05<00:01, 5.07MB/s][A
     50%|██████████████████▋                  | 9.34M/18.5M [00:05<00:01, 5.36MB/s][A
     54%|███████████████████▉                 | 10.0M/18.5M [00:05<00:01, 5.74MB/s][A
     58%|█████████████████████▍               | 10.7M/18.5M [00:05<00:01, 6.17MB/s][A
     62%|██████████████████████▉              | 11.5M/18.5M [00:05<00:01, 6.62MB/s][A
     66%|████████████████████████▌            | 12.3M/18.5M [00:05<00:00, 6.98MB/s][A
     71%|██████████████████████████▎          | 13.2M/18.5M [00:06<00:00, 7.52MB/s][A
     76%|████████████████████████████▏        | 14.1M/18.5M [00:06<00:00, 7.85MB/s][A
     82%|██████████████████████████████▎      | 15.2M/18.5M [00:06<00:00, 8.53MB/s][A
     88%|████████████████████████████████▍    | 16.2M/18.5M [00:06<00:00, 9.19MB/s][A
     94%|██████████████████████████████████▊  | 17.4M/18.5M [00:06<00:00, 9.96MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 21.7GB/s]
    009-2014-WithinSession: 100%|##########| 2/2 [00:33<00:00, 16.66s/it]    009-2014-WithinSession: 100%|##########| 2/2 [00:33<00:00, 16.58s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-119

Plot Results
----------------

Here we plot the results to compare the two pipelines

.. GENERATED FROM PYTHON SOURCE LINES 119-138

.. code-block:: default


    fig, ax = plt.subplots(facecolor="white", figsize=[8, 4])

    sns.stripplot(
        data=results,
        y="score",
        x="pipeline",
        ax=ax,
        jitter=True,
        alpha=0.5,
        zorder=1,
        palette="Set1",
    )
    sns.pointplot(data=results, y="score", x="pipeline", ax=ax, zorder=1, palette="Set1")

    ax.set_ylabel("ROC AUC")
    ax.set_ylim(0.5, 1)

    plt.show()



.. image:: /auto_examples/images/sphx_glr_plot_within_session_p300_001.png
    :alt: plot within session p300
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  33.326 seconds)


.. _sphx_glr_download_auto_examples_plot_within_session_p300.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_within_session_p300.py <plot_within_session_p300.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_within_session_p300.ipynb <plot_within_session_p300.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
