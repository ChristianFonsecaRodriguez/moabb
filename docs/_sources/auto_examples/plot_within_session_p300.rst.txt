
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_within_session_p300.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_within_session_p300.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_within_session_p300.py:


===========================
Within Session P300
===========================

This example shows how to perform a within session analysis on three different
P300 datasets.

We will compare two pipelines :

- Riemannian geometry
- XDAWN with Linear Discriminant Analysis

We will use the P300 paradigm, which uses the AUC as metric.

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    # Authors: Pedro Rodrigues <pedro.rodrigues01@gmail.com>
    #
    # License: BSD (3-clause)

    import warnings

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns
    from pyriemann.estimation import Xdawn, XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.pipeline import make_pipeline

    import moabb
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import P300






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)




.. GENERATED FROM PYTHON SOURCE LINES 39-40

getting rid of the warnings about the future

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default

    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)

    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 46-50

This is an auxiliary transformer that allows one to vectorize data
structures in a pipeline For instance, in the case of an X with dimensions
Nt x Nc x Ns, one might be interested in a new data structure with
dimensions Nt x (Nc.Ns)

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default



    class Vectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y):
            """fit."""
            return self

        def transform(self, X):
            """transform."""
            return np.reshape(X, (X.shape[0], -1))









.. GENERATED FROM PYTHON SOURCE LINES 66-70

Create Pipelines
----------------

Pipelines must be a dict of sklearn pipeline transformer.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default



    pipelines = {}








.. GENERATED FROM PYTHON SOURCE LINES 75-78

We have to do this because the classes are called 'Target' and 'NonTarget'
but the evaluation function uses a LabelEncoder, transforming them
to 0 and 1

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default

    labels_dict = {"Target": 1, "NonTarget": 0}

    pipelines["RG+LDA"] = make_pipeline(
        XdawnCovariances(
            nfilter=2, classes=[labels_dict["Target"]], estimator="lwf", xdawn_estimator="scm"
        ),
        TangentSpace(),
        LDA(solver="lsqr", shrinkage="auto"),
    )

    pipelines["Xdw+LDA"] = make_pipeline(
        Xdawn(nfilter=2, estimator="scm"), Vectorizer(), LDA(solver="lsqr", shrinkage="auto")
    )








.. GENERATED FROM PYTHON SOURCE LINES 93-103

Evaluation
----------

We define the paradigm (P300) and use all three datasets available for it.
The evaluation will return a DataFrame containing a single AUC score for
each subject / session of the dataset, and for each pipeline.

Results are saved into the database, so that if you add a new pipeline, it
will not run again the evaluation unless a parameter has changed. Results can
be overwritten if necessary.

.. GENERATED FROM PYTHON SOURCE LINES 103-114

.. code-block:: default


    paradigm = P300(resample=128)
    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]
    overwrite = True  # set to True if we want to overwrite cached results
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=overwrite
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-WithinSession:   0%|          | 0/2 [00:00<?, ?it/s]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 3.07k/18.5M [00:00<10:03, 30.7kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:11, 96.7kB/s][A
      0%|                                      | 33.8k/18.5M [00:00<02:25, 127kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:10, 141kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:28, 208kB/s][A
      1%|▏                                      | 116k/18.5M [00:00<01:14, 248kB/s][A
      1%|▎                                      | 148k/18.5M [00:00<01:07, 274kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:03, 291kB/s][A
      1%|▍                                      | 214k/18.5M [00:00<01:00, 302kB/s][A
      1%|▌                                      | 247k/18.5M [00:01<00:59, 309kB/s][A
      2%|▌                                      | 296k/18.5M [00:01<00:50, 363kB/s][A
      2%|▋                                      | 345k/18.5M [00:01<00:45, 402kB/s][A
      2%|▊                                      | 411k/18.5M [00:01<00:37, 478kB/s][A
      2%|▉                                      | 460k/18.5M [00:01<00:37, 481kB/s][A
      3%|█                                      | 525k/18.5M [00:01<00:33, 532kB/s][A
      3%|█▎                                     | 607k/18.5M [00:01<00:29, 617kB/s][A
      4%|█▍                                     | 673k/18.5M [00:01<00:28, 628kB/s][A
      4%|█▌                                     | 738k/18.5M [00:01<00:28, 635kB/s][A
      4%|█▋                                     | 820k/18.5M [00:01<00:25, 689kB/s][A
      5%|█▉                                     | 902k/18.5M [00:02<00:24, 728kB/s][A
      5%|██                                    | 1.00M/18.5M [00:02<00:21, 803kB/s][A
      6%|██▎                                   | 1.10M/18.5M [00:02<00:20, 856kB/s][A
      7%|██▍                                   | 1.21M/18.5M [00:02<00:18, 927kB/s][A
      7%|██▋                                   | 1.31M/18.5M [00:02<00:18, 942kB/s][A
      8%|██▉                                  | 1.44M/18.5M [00:02<00:16, 1.05MB/s][A
      9%|███▏                                 | 1.59M/18.5M [00:02<00:14, 1.17MB/s][A
      9%|███▍                                 | 1.72M/18.5M [00:02<00:13, 1.21MB/s][A
     10%|███▊                                 | 1.89M/18.5M [00:02<00:12, 1.32MB/s][A
     11%|████                                 | 2.05M/18.5M [00:02<00:11, 1.41MB/s][A
     12%|████▍                                | 2.21M/18.5M [00:03<00:11, 1.47MB/s][A
     13%|████▊                                | 2.41M/18.5M [00:03<00:10, 1.60MB/s][A
     14%|█████▏                               | 2.61M/18.5M [00:03<00:09, 1.71MB/s][A
     15%|█████▋                               | 2.82M/18.5M [00:03<00:08, 1.83MB/s][A
     16%|██████                               | 3.05M/18.5M [00:03<00:07, 1.94MB/s][A
     18%|██████▌                              | 3.31M/18.5M [00:03<00:07, 2.14MB/s][A
     19%|███████                              | 3.56M/18.5M [00:03<00:06, 2.23MB/s][A
     21%|███████▋                             | 3.82M/18.5M [00:03<00:06, 2.34MB/s][A
     22%|████████▏                            | 4.11M/18.5M [00:03<00:05, 2.52MB/s][A
     24%|████████▉                            | 4.46M/18.5M [00:03<00:05, 2.76MB/s][A
     26%|█████████▌                           | 4.79M/18.5M [00:04<00:04, 2.91MB/s][A
     28%|██████████▎                          | 5.16M/18.5M [00:04<00:04, 3.16MB/s][A
     30%|███████████▏                         | 5.59M/18.5M [00:04<00:03, 3.49MB/s][A
     33%|████████████                         | 6.05M/18.5M [00:04<00:03, 3.81MB/s][A
     35%|█████████████                        | 6.54M/18.5M [00:04<00:02, 4.13MB/s][A
     38%|██████████████▏                      | 7.10M/18.5M [00:04<00:02, 4.56MB/s][A
     42%|███████████████▍                     | 7.70M/18.5M [00:04<00:02, 4.99MB/s][A
     45%|████████████████▋                    | 8.36M/18.5M [00:04<00:01, 5.45MB/s][A
     49%|██████████████████                   | 9.04M/18.5M [00:04<00:01, 5.77MB/s][A
     53%|███████████████████▌                 | 9.80M/18.5M [00:04<00:01, 6.26MB/s][A
     57%|█████████████████████▏               | 10.6M/18.5M [00:05<00:01, 6.71MB/s][A
     62%|██████████████████████▊              | 11.4M/18.5M [00:05<00:00, 7.24MB/s][A
     67%|████████████████████████▋            | 12.3M/18.5M [00:05<00:00, 7.76MB/s][A
     72%|██████████████████████████▌          | 13.3M/18.5M [00:05<00:00, 8.31MB/s][A
     78%|████████████████████████████▋        | 14.4M/18.5M [00:05<00:00, 8.94MB/s][A
     84%|██████████████████████████████▉      | 15.5M/18.5M [00:05<00:00, 9.60MB/s][A
     90%|█████████████████████████████████▎   | 16.7M/18.5M [00:05<00:00, 10.3MB/s][A
     97%|███████████████████████████████████▉ | 18.0M/18.5M [00:05<00:00, 11.0MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 20.6GB/s]
    009-2014-WithinSession:  50%|#####     | 1/2 [00:16<00:16, 16.37s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 2.05k/18.5M [00:00<15:05, 20.5kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:08, 98.2kB/s][A
      0%|                                      | 33.8k/18.5M [00:00<02:25, 127kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:10, 141kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:28, 208kB/s][A
      1%|▏                                      | 104k/18.5M [00:00<01:27, 210kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:19, 231kB/s][A
      1%|▎                                      | 156k/18.5M [00:00<01:19, 232kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:16, 240kB/s][A
      1%|▍                                      | 214k/18.5M [00:01<01:08, 266kB/s][A
      1%|▌                                      | 247k/18.5M [00:01<01:04, 285kB/s][A
      2%|▌                                      | 280k/18.5M [00:01<01:01, 297kB/s][A
      2%|▋                                      | 312k/18.5M [00:01<00:59, 306kB/s][A
      2%|▊                                      | 361k/18.5M [00:01<00:50, 361kB/s][A
      2%|▊                                      | 411k/18.5M [00:01<00:45, 399kB/s][A
      2%|▉                                      | 460k/18.5M [00:01<00:42, 426kB/s][A
      3%|█                                      | 509k/18.5M [00:01<00:40, 445kB/s][A
      3%|█▏                                     | 574k/18.5M [00:01<00:35, 505kB/s][A
      3%|█▎                                     | 640k/18.5M [00:01<00:32, 549kB/s][A
      4%|█▍                                     | 695k/18.5M [00:02<00:32, 549kB/s][A
      4%|█▌                                     | 755k/18.5M [00:02<00:31, 562kB/s][A
      4%|█▋                                     | 820k/18.5M [00:02<00:30, 589kB/s][A
      5%|█▉                                     | 919k/18.5M [00:02<00:25, 704kB/s][A
      5%|██                                    | 1.00M/18.5M [00:02<00:24, 721kB/s][A
      6%|██▎                                   | 1.10M/18.5M [00:02<00:21, 797kB/s][A
      7%|██▍                                   | 1.21M/18.5M [00:02<00:19, 894kB/s][A
      7%|██▋                                   | 1.31M/18.5M [00:02<00:18, 920kB/s][A
      8%|██▉                                   | 1.43M/18.5M [00:02<00:17, 982kB/s][A
      8%|███▏                                  | 1.52M/18.5M [00:02<00:17, 980kB/s][A
      9%|███▎                                 | 1.64M/18.5M [00:03<00:16, 1.03MB/s][A
     10%|███▌                                 | 1.77M/18.5M [00:03<00:15, 1.11MB/s][A
     10%|███▊                                 | 1.90M/18.5M [00:03<00:14, 1.15MB/s][A
     11%|████                                 | 2.05M/18.5M [00:03<00:13, 1.24MB/s][A
     12%|████▍                                | 2.20M/18.5M [00:03<00:12, 1.31MB/s][A
     13%|████▋                                | 2.36M/18.5M [00:03<00:11, 1.41MB/s][A
     14%|█████                                | 2.52M/18.5M [00:03<00:10, 1.47MB/s][A
     15%|█████▍                               | 2.70M/18.5M [00:03<00:10, 1.54MB/s][A
     16%|█████▊                               | 2.92M/18.5M [00:03<00:09, 1.71MB/s][A
     17%|██████▎                              | 3.13M/18.5M [00:03<00:08, 1.82MB/s][A
     18%|██████▋                              | 3.36M/18.5M [00:04<00:07, 1.95MB/s][A
     19%|███████▏                             | 3.61M/18.5M [00:04<00:07, 2.06MB/s][A
     21%|███████▋                             | 3.85M/18.5M [00:04<00:06, 2.17MB/s][A
     22%|████████▏                            | 4.10M/18.5M [00:04<00:06, 2.25MB/s][A
     24%|████████▊                            | 4.39M/18.5M [00:04<00:05, 2.45MB/s][A
     25%|█████████▎                           | 4.67M/18.5M [00:04<00:05, 2.54MB/s][A
     27%|█████████▉                           | 4.98M/18.5M [00:04<00:05, 2.66MB/s][A
     29%|██████████▋                          | 5.33M/18.5M [00:04<00:04, 2.88MB/s][A
     31%|███████████▍                         | 5.70M/18.5M [00:04<00:04, 3.13MB/s][A
     33%|████████████▏                        | 6.10M/18.5M [00:04<00:03, 3.36MB/s][A
     35%|████████████▉                        | 6.51M/18.5M [00:05<00:03, 3.57MB/s][A
     38%|█████████████▉                       | 6.96M/18.5M [00:05<00:03, 3.82MB/s][A
     40%|██████████████▉                      | 7.46M/18.5M [00:05<00:02, 4.14MB/s][A
     43%|███████████████▉                     | 7.98M/18.5M [00:05<00:02, 4.45MB/s][A
     46%|█████████████████                    | 8.52M/18.5M [00:05<00:02, 4.72MB/s][A
     49%|██████████████████▎                  | 9.14M/18.5M [00:05<00:01, 5.16MB/s][A
     53%|███████████████████▌                 | 9.77M/18.5M [00:05<00:01, 5.46MB/s][A
     57%|████████████████████▉                | 10.5M/18.5M [00:05<00:01, 5.83MB/s][A
     61%|██████████████████████▍              | 11.2M/18.5M [00:05<00:01, 6.33MB/s][A
     65%|████████████████████████             | 12.0M/18.5M [00:05<00:00, 6.82MB/s][A
     70%|█████████████████████████▊           | 12.9M/18.5M [00:06<00:00, 7.34MB/s][A
     75%|███████████████████████████▌         | 13.8M/18.5M [00:06<00:00, 7.90MB/s][A
     80%|█████████████████████████████▌       | 14.8M/18.5M [00:06<00:00, 8.52MB/s][A
     86%|███████████████████████████████▋     | 15.9M/18.5M [00:06<00:00, 9.12MB/s][A
     92%|██████████████████████████████████   | 17.0M/18.5M [00:06<00:00, 9.78MB/s][A
     98%|████████████████████████████████████▍| 18.2M/18.5M [00:06<00:00, 10.4MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 22.3GB/s]
    009-2014-WithinSession: 100%|##########| 2/2 [00:33<00:00, 16.61s/it]    009-2014-WithinSession: 100%|##########| 2/2 [00:33<00:00, 16.58s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-119

Plot Results
----------------

Here we plot the results to compare the two pipelines

.. GENERATED FROM PYTHON SOURCE LINES 119-138

.. code-block:: default


    fig, ax = plt.subplots(facecolor="white", figsize=[8, 4])

    sns.stripplot(
        data=results,
        y="score",
        x="pipeline",
        ax=ax,
        jitter=True,
        alpha=0.5,
        zorder=1,
        palette="Set1",
    )
    sns.pointplot(data=results, y="score", x="pipeline", ax=ax, zorder=1, palette="Set1")

    ax.set_ylabel("ROC AUC")
    ax.set_ylim(0.5, 1)

    plt.show()



.. image:: /auto_examples/images/sphx_glr_plot_within_session_p300_001.png
    :alt: plot within session p300
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  33.346 seconds)


.. _sphx_glr_download_auto_examples_plot_within_session_p300.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_within_session_p300.py <plot_within_session_p300.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_within_session_p300.ipynb <plot_within_session_p300.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
