
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_within_session_p300.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_within_session_p300.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_within_session_p300.py:


===========================
Within Session P300
===========================

This example shows how to perform a within session analysis on three different
P300 datasets.

We will compare two pipelines :

- Riemannian geometry
- XDAWN with Linear Discriminant Analysis

We will use the P300 paradigm, which uses the AUC as metric.

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    # Authors: Pedro Rodrigues <pedro.rodrigues01@gmail.com>
    #
    # License: BSD (3-clause)

    import warnings

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns
    from pyriemann.estimation import Xdawn, XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.pipeline import make_pipeline

    import moabb
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import P300






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)




.. GENERATED FROM PYTHON SOURCE LINES 39-40

getting rid of the warnings about the future

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default

    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)

    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 46-50

This is an auxiliary transformer that allows one to vectorize data
structures in a pipeline For instance, in the case of an X with dimensions
Nt x Nc x Ns, one might be interested in a new data structure with
dimensions Nt x (Nc.Ns)

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default



    class Vectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y):
            """fit."""
            return self

        def transform(self, X):
            """transform. """
            return np.reshape(X, (X.shape[0], -1))









.. GENERATED FROM PYTHON SOURCE LINES 66-70

Create Pipelines
----------------

Pipelines must be a dict of sklearn pipeline transformer.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default



    pipelines = {}








.. GENERATED FROM PYTHON SOURCE LINES 75-78

We have to do this because the classes are called 'Target' and 'NonTarget'
but the evaluation function uses a LabelEncoder, transforming them
to 0 and 1

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default

    labels_dict = {"Target": 1, "NonTarget": 0}

    pipelines["RG+LDA"] = make_pipeline(
        XdawnCovariances(
            nfilter=2, classes=[labels_dict["Target"]], estimator="lwf", xdawn_estimator="scm"
        ),
        TangentSpace(),
        LDA(solver="lsqr", shrinkage="auto"),
    )

    pipelines["Xdw+LDA"] = make_pipeline(
        Xdawn(nfilter=2, estimator="scm"), Vectorizer(), LDA(solver="lsqr", shrinkage="auto")
    )








.. GENERATED FROM PYTHON SOURCE LINES 93-103

Evaluation
----------

We define the paradigm (P300) and use all three datasets available for it.
The evaluation will return a DataFrame containing a single AUC score for
each subject / session of the dataset, and for each pipeline.

Results are saved into the database, so that if you add a new pipeline, it
will not run again the evaluation unless a parameter has changed. Results can
be overwritten if necessary.

.. GENERATED FROM PYTHON SOURCE LINES 103-114

.. code-block:: default


    paradigm = P300(resample=128)
    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]
    overwrite = True  # set to True if we want to overwrite cached results
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=overwrite
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-WithinSession:   0%|          | 0/2 [00:00<?, ?it/s]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 1.02k/18.5M [00:00<30:23, 10.2kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:06, 99.2kB/s][A
      0%|                                      | 33.8k/18.5M [00:00<02:25, 127kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:11, 140kB/s][A
      0%|▏                                     | 82.9k/18.5M [00:00<01:29, 206kB/s][A
      1%|▏                                      | 104k/18.5M [00:00<01:28, 207kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:20, 229kB/s][A
      1%|▎                                      | 156k/18.5M [00:00<01:20, 230kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:17, 237kB/s][A
      1%|▍                                      | 214k/18.5M [00:01<01:09, 263kB/s][A
      1%|▌                                      | 247k/18.5M [00:01<01:05, 281kB/s][A
      2%|▌                                      | 280k/18.5M [00:01<01:02, 294kB/s][A
      2%|▋                                      | 329k/18.5M [00:01<00:51, 351kB/s][A
      2%|▊                                      | 378k/18.5M [00:01<00:46, 387kB/s][A
      2%|▉                                      | 417k/18.5M [00:01<00:47, 383kB/s][A
      2%|▉                                      | 460k/18.5M [00:01<00:45, 395kB/s][A
      3%|█                                      | 509k/18.5M [00:01<00:42, 420kB/s][A
      3%|█▏                                     | 574k/18.5M [00:01<00:36, 486kB/s][A
      3%|█▎                                     | 624k/18.5M [00:01<00:36, 485kB/s][A
      4%|█▍                                     | 689k/18.5M [00:02<00:33, 531kB/s][A
      4%|█▌                                     | 755k/18.5M [00:02<00:31, 565kB/s][A
      4%|█▋                                     | 820k/18.5M [00:02<00:30, 589kB/s][A
      5%|█▊                                     | 886k/18.5M [00:02<00:29, 603kB/s][A
      5%|██                                     | 968k/18.5M [00:02<00:26, 660kB/s][A
      6%|██▏                                   | 1.05M/18.5M [00:02<00:24, 701kB/s][A
      6%|██▎                                   | 1.13M/18.5M [00:02<00:23, 731kB/s][A
      7%|██▌                                   | 1.23M/18.5M [00:02<00:21, 793kB/s][A
      7%|██▋                                   | 1.33M/18.5M [00:02<00:20, 844kB/s][A
      8%|██▉                                   | 1.44M/18.5M [00:02<00:18, 923kB/s][A
      8%|███▏                                  | 1.54M/18.5M [00:03<00:18, 924kB/s][A
      9%|███▎                                  | 1.64M/18.5M [00:03<00:17, 955kB/s][A
     10%|███▌                                 | 1.77M/18.5M [00:03<00:16, 1.04MB/s][A
     10%|███▊                                 | 1.92M/18.5M [00:03<00:14, 1.16MB/s][A
     11%|████                                 | 2.05M/18.5M [00:03<00:13, 1.19MB/s][A
     12%|████▍                                | 2.20M/18.5M [00:03<00:12, 1.27MB/s][A
     13%|████▋                                | 2.36M/18.5M [00:03<00:11, 1.35MB/s][A
     14%|█████                                | 2.54M/18.5M [00:03<00:11, 1.45MB/s][A
     15%|█████▍                               | 2.74M/18.5M [00:03<00:09, 1.59MB/s][A
     16%|█████▊                               | 2.93M/18.5M [00:04<00:09, 1.69MB/s][A
     17%|██████▎                              | 3.13M/18.5M [00:04<00:08, 1.75MB/s][A
     18%|██████▌                              | 3.31M/18.5M [00:04<00:08, 1.76MB/s][A
     19%|███████                              | 3.53M/18.5M [00:04<00:07, 1.89MB/s][A
     20%|███████▍                             | 3.74M/18.5M [00:04<00:07, 1.93MB/s][A
     22%|███████▉                             | 4.00M/18.5M [00:04<00:07, 2.07MB/s][A
     23%|████████▍                            | 4.21M/18.5M [00:04<00:06, 2.08MB/s][A
     24%|████████▉                            | 4.49M/18.5M [00:04<00:06, 2.26MB/s][A
     26%|█████████▌                           | 4.79M/18.5M [00:04<00:05, 2.45MB/s][A
     27%|██████████                           | 5.05M/18.5M [00:04<00:05, 2.49MB/s][A
     29%|██████████▋                          | 5.37M/18.5M [00:05<00:04, 2.69MB/s][A
     31%|███████████▍                         | 5.72M/18.5M [00:05<00:04, 2.89MB/s][A
     33%|████████████▏                        | 6.08M/18.5M [00:05<00:04, 3.09MB/s][A
     35%|████████████▉                        | 6.46M/18.5M [00:05<00:03, 3.21MB/s][A
     37%|█████████████▋                       | 6.85M/18.5M [00:05<00:03, 3.40MB/s][A
     39%|██████████████▍                      | 7.26M/18.5M [00:05<00:03, 3.59MB/s][A
     42%|███████████████▍                     | 7.70M/18.5M [00:05<00:02, 3.79MB/s][A
     44%|████████████████▏                    | 8.13M/18.5M [00:05<00:02, 3.90MB/s][A
     47%|█████████████████▏                   | 8.62M/18.5M [00:05<00:02, 4.18MB/s][A
     49%|██████████████████▎                  | 9.14M/18.5M [00:05<00:02, 4.46MB/s][A
     52%|███████████████████▎                 | 9.70M/18.5M [00:06<00:01, 4.67MB/s][A
     55%|████████████████████▌                | 10.3M/18.5M [00:06<00:01, 4.96MB/s][A
     59%|█████████████████████▋               | 10.9M/18.5M [00:06<00:01, 5.20MB/s][A
     62%|██████████████████████▉              | 11.5M/18.5M [00:06<00:01, 5.36MB/s][A
     65%|████████████████████████▏            | 12.1M/18.5M [00:06<00:01, 5.61MB/s][A
     69%|█████████████████████████▌           | 12.8M/18.5M [00:06<00:00, 5.95MB/s][A
     73%|███████████████████████████          | 13.6M/18.5M [00:06<00:00, 6.33MB/s][A
     77%|████████████████████████████▌        | 14.3M/18.5M [00:06<00:00, 6.55MB/s][A
     81%|██████████████████████████████       | 15.1M/18.5M [00:06<00:00, 6.89MB/s][A
     86%|███████████████████████████████▊     | 15.9M/18.5M [00:06<00:00, 7.29MB/s][A
     91%|█████████████████████████████████▌   | 16.8M/18.5M [00:07<00:00, 7.65MB/s][A
     95%|███████████████████████████████████▎ | 17.7M/18.5M [00:07<00:00, 8.01MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 22.0GB/s]
    009-2014-WithinSession:  50%|#####     | 1/2 [00:18<00:18, 18.12s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 1.02k/18.5M [00:00<30:37, 10.1kB/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:07, 98.9kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<01:32, 201kB/s][A
      0%|▏                                     | 70.7k/18.5M [00:00<01:31, 201kB/s][A
      0%|▏                                     | 91.1k/18.5M [00:00<01:31, 201kB/s][A
      1%|▏                                      | 112k/18.5M [00:00<01:31, 201kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:31, 201kB/s][A
      1%|▎                                      | 153k/18.5M [00:00<01:31, 201kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:20, 227kB/s][A
      1%|▍                                      | 214k/18.5M [00:01<01:11, 256kB/s][A
      1%|▌                                      | 247k/18.5M [00:01<01:06, 276kB/s][A
      2%|▌                                      | 280k/18.5M [00:01<01:02, 290kB/s][A
      2%|▋                                      | 312k/18.5M [00:01<01:00, 300kB/s][A
      2%|▊                                      | 361k/18.5M [00:01<00:51, 355kB/s][A
      2%|▉                                      | 427k/18.5M [00:01<00:40, 442kB/s][A
      3%|█                                      | 476k/18.5M [00:01<00:39, 454kB/s][A
      3%|█▏                                     | 542k/18.5M [00:01<00:35, 511kB/s][A
      3%|█▎                                     | 607k/18.5M [00:01<00:32, 551kB/s][A
      4%|█▍                                     | 673k/18.5M [00:01<00:30, 579kB/s][A
      4%|█▌                                     | 755k/18.5M [00:02<00:27, 641kB/s][A
      5%|█▊                                     | 837k/18.5M [00:02<00:25, 688kB/s][A
      5%|█▉                                     | 906k/18.5M [00:02<00:25, 682kB/s][A
      5%|██                                    | 1.00M/18.5M [00:02<00:23, 755kB/s][A
      6%|██▏                                   | 1.08M/18.5M [00:02<00:23, 752kB/s][A
      6%|██▍                                   | 1.18M/18.5M [00:02<00:20, 831kB/s][A
      7%|██▋                                   | 1.30M/18.5M [00:02<00:18, 918kB/s][A
      8%|██▊                                   | 1.39M/18.5M [00:02<00:18, 931kB/s][A
      8%|███                                  | 1.52M/18.5M [00:02<00:16, 1.04MB/s][A
      9%|███▎                                 | 1.64M/18.5M [00:02<00:15, 1.07MB/s][A
     10%|███▌                                 | 1.79M/18.5M [00:03<00:14, 1.18MB/s][A
     10%|███▊                                 | 1.92M/18.5M [00:03<00:13, 1.21MB/s][A
     11%|████▏                                | 2.08M/18.5M [00:03<00:12, 1.33MB/s][A
     12%|████▍                                | 2.25M/18.5M [00:03<00:11, 1.39MB/s][A
     13%|████▊                                | 2.43M/18.5M [00:03<00:10, 1.50MB/s][A
     14%|█████▏                               | 2.58M/18.5M [00:03<00:10, 1.49MB/s][A
     15%|█████▍                               | 2.74M/18.5M [00:03<00:10, 1.52MB/s][A
     16%|█████▉                               | 2.95M/18.5M [00:03<00:09, 1.69MB/s][A
     17%|██████▎                              | 3.18M/18.5M [00:03<00:08, 1.85MB/s][A
     18%|██████▊                              | 3.41M/18.5M [00:03<00:07, 1.95MB/s][A
     20%|███████▎                             | 3.64M/18.5M [00:04<00:07, 2.04MB/s][A
     21%|███████▊                             | 3.90M/18.5M [00:04<00:06, 2.16MB/s][A
     22%|████████▎                            | 4.16M/18.5M [00:04<00:06, 2.27MB/s][A
     24%|████████▊                            | 4.41M/18.5M [00:04<00:06, 2.31MB/s][A
     25%|█████████▍                           | 4.70M/18.5M [00:04<00:05, 2.48MB/s][A
     27%|██████████                           | 5.03M/18.5M [00:04<00:04, 2.70MB/s][A
     29%|██████████▋                          | 5.36M/18.5M [00:04<00:04, 2.86MB/s][A
     31%|███████████▎                         | 5.69M/18.5M [00:04<00:04, 2.97MB/s][A
     33%|████████████                         | 6.06M/18.5M [00:04<00:03, 3.19MB/s][A
     35%|████████████▉                        | 6.46M/18.5M [00:05<00:03, 3.28MB/s][A
     37%|█████████████▋                       | 6.85M/18.5M [00:05<00:03, 3.45MB/s][A
     39%|██████████████▌                      | 7.28M/18.5M [00:05<00:03, 3.66MB/s][A
     42%|███████████████▍                     | 7.73M/18.5M [00:05<00:02, 3.91MB/s][A
     44%|████████████████▍                    | 8.23M/18.5M [00:05<00:02, 4.16MB/s][A
     47%|█████████████████▍                   | 8.75M/18.5M [00:05<00:02, 4.44MB/s][A
     50%|██████████████████▌                  | 9.32M/18.5M [00:05<00:01, 4.78MB/s][A
     54%|███████████████████▊                 | 9.93M/18.5M [00:05<00:01, 5.11MB/s][A
     57%|█████████████████████                | 10.6M/18.5M [00:05<00:01, 5.44MB/s][A
     60%|██████████████████████▍              | 11.2M/18.5M [00:05<00:01, 5.69MB/s][A
     64%|███████████████████████▊             | 11.9M/18.5M [00:06<00:01, 6.07MB/s][A
     68%|█████████████████████████▎           | 12.7M/18.5M [00:06<00:00, 6.45MB/s][A
     73%|██████████████████████████▉          | 13.5M/18.5M [00:06<00:00, 6.91MB/s][A
     77%|████████████████████████████▋        | 14.3M/18.5M [00:06<00:00, 7.29MB/s][A
     82%|██████████████████████████████▎      | 15.2M/18.5M [00:06<00:00, 7.61MB/s][A
     87%|████████████████████████████████▏    | 16.1M/18.5M [00:06<00:00, 8.04MB/s][A
     92%|██████████████████████████████████▏  | 17.1M/18.5M [00:06<00:00, 8.46MB/s][A
     98%|████████████████████████████████████▏| 18.1M/18.5M [00:06<00:00, 8.91MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 25.7GB/s]
    009-2014-WithinSession: 100%|##########| 2/2 [00:35<00:00, 17.55s/it]    009-2014-WithinSession: 100%|##########| 2/2 [00:35<00:00, 17.64s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-119

Plot Results
----------------

Here we plot the results to compare the two pipelines

.. GENERATED FROM PYTHON SOURCE LINES 119-138

.. code-block:: default


    fig, ax = plt.subplots(facecolor="white", figsize=[8, 4])

    sns.stripplot(
        data=results,
        y="score",
        x="pipeline",
        ax=ax,
        jitter=True,
        alpha=0.5,
        zorder=1,
        palette="Set1",
    )
    sns.pointplot(data=results, y="score", x="pipeline", ax=ax, zorder=1, palette="Set1")

    ax.set_ylabel("ROC AUC")
    ax.set_ylim(0.5, 1)

    fig.show()



.. image:: /auto_examples/images/sphx_glr_plot_within_session_p300_001.png
    :alt: plot within session p300
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  35.443 seconds)


.. _sphx_glr_download_auto_examples_plot_within_session_p300.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_within_session_p300.py <plot_within_session_p300.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_within_session_p300.ipynb <plot_within_session_p300.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
