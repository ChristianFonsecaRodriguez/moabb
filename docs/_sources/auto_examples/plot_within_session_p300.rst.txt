
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_within_session_p300.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_within_session_p300.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_within_session_p300.py:


===========================
Within Session P300
===========================

This example shows how to perform a within session analysis on three different
P300 datasets.

We will compare two pipelines :

- Riemannian geometry
- XDAWN with Linear Discriminant Analysis

We will use the P300 paradigm, which uses the AUC as metric.

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    # Authors: Pedro Rodrigues <pedro.rodrigues01@gmail.com>
    #
    # License: BSD (3-clause)

    import warnings

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns
    from pyriemann.estimation import Xdawn, XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.pipeline import make_pipeline

    import moabb
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import P300






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)




.. GENERATED FROM PYTHON SOURCE LINES 39-40

getting rid of the warnings about the future

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default

    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)

    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 46-50

This is an auxiliary transformer that allows one to vectorize data
structures in a pipeline For instance, in the case of an X with dimensions
Nt x Nc x Ns, one might be interested in a new data structure with
dimensions Nt x (Nc.Ns)

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default



    class Vectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y):
            """fit."""
            return self

        def transform(self, X):
            """transform. """
            return np.reshape(X, (X.shape[0], -1))









.. GENERATED FROM PYTHON SOURCE LINES 66-70

Create Pipelines
----------------

Pipelines must be a dict of sklearn pipeline transformer.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default



    pipelines = {}








.. GENERATED FROM PYTHON SOURCE LINES 75-78

We have to do this because the classes are called 'Target' and 'NonTarget'
but the evaluation function uses a LabelEncoder, transforming them
to 0 and 1

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default

    labels_dict = {"Target": 1, "NonTarget": 0}

    pipelines["RG+LDA"] = make_pipeline(
        XdawnCovariances(
            nfilter=2, classes=[labels_dict["Target"]], estimator="lwf", xdawn_estimator="scm"
        ),
        TangentSpace(),
        LDA(solver="lsqr", shrinkage="auto"),
    )

    pipelines["Xdw+LDA"] = make_pipeline(
        Xdawn(nfilter=2, estimator="scm"), Vectorizer(), LDA(solver="lsqr", shrinkage="auto")
    )








.. GENERATED FROM PYTHON SOURCE LINES 93-103

Evaluation
----------

We define the paradigm (P300) and use all three datasets available for it.
The evaluation will return a DataFrame containing a single AUC score for
each subject / session of the dataset, and for each pipeline.

Results are saved into the database, so that if you add a new pipeline, it
will not run again the evaluation unless a parameter has changed. Results can
be overwritten if necessary.

.. GENERATED FROM PYTHON SOURCE LINES 103-114

.. code-block:: default


    paradigm = P300(resample=128)
    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]
    overwrite = True  # set to True if we want to overwrite cached results
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=overwrite
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-WithinSession:   0%|          | 0/2 [00:00<?, ?it/s]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:31, 87.3kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:19, 133kB/s][A
      1%|▏                                     | 99.3k/18.5M [00:00<01:18, 236kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:29, 206kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:06, 276kB/s][A
      1%|▍                                      | 230k/18.5M [00:00<00:55, 330kB/s][A
      2%|▋                                      | 312k/18.5M [00:01<00:49, 365kB/s][A
      2%|▊                                      | 380k/18.5M [00:01<00:41, 438kB/s][A
      3%|▉                                      | 474k/18.5M [00:01<00:32, 564kB/s][A
      3%|█▏                                     | 542k/18.5M [00:01<00:30, 593kB/s][A
      3%|█▎                                     | 624k/18.5M [00:01<00:27, 655kB/s][A
      4%|█▍                                     | 706k/18.5M [00:01<00:25, 697kB/s][A
      4%|█▋                                     | 809k/18.5M [00:01<00:22, 793kB/s][A
      5%|█▉                                     | 919k/18.5M [00:01<00:20, 880kB/s][A
      6%|██                                   | 1.05M/18.5M [00:01<00:17, 1.00MB/s][A
      6%|██▎                                  | 1.18M/18.5M [00:02<00:15, 1.09MB/s][A
      7%|██▌                                  | 1.31M/18.5M [00:02<00:14, 1.15MB/s][A
      8%|██▉                                  | 1.46M/18.5M [00:02<00:13, 1.25MB/s][A
      9%|███▏                                 | 1.59M/18.5M [00:02<00:13, 1.25MB/s][A
      9%|███▍                                 | 1.73M/18.5M [00:02<00:12, 1.30MB/s][A
     10%|███▊                                 | 1.88M/18.5M [00:02<00:12, 1.38MB/s][A
     11%|████                                 | 2.06M/18.5M [00:02<00:10, 1.50MB/s][A
     12%|████▌                                | 2.28M/18.5M [00:02<00:09, 1.67MB/s][A
     13%|████▉                                | 2.47M/18.5M [00:02<00:09, 1.74MB/s][A
     15%|█████▍                               | 2.72M/18.5M [00:02<00:08, 1.97MB/s][A
     16%|█████▊                               | 2.92M/18.5M [00:03<00:07, 1.98MB/s][A
     17%|██████▍                              | 3.20M/18.5M [00:03<00:06, 2.21MB/s][A
     19%|██████▉                              | 3.48M/18.5M [00:03<00:06, 2.39MB/s][A
     20%|███████▌                             | 3.78M/18.5M [00:03<00:05, 2.57MB/s][A
     22%|████████▏                            | 4.10M/18.5M [00:03<00:05, 2.76MB/s][A
     24%|████████▉                            | 4.46M/18.5M [00:03<00:04, 2.99MB/s][A
     26%|█████████▋                           | 4.85M/18.5M [00:03<00:04, 3.28MB/s][A
     28%|██████████▌                          | 5.28M/18.5M [00:03<00:03, 3.56MB/s][A
     31%|███████████▍                         | 5.70M/18.5M [00:03<00:03, 3.76MB/s][A
     34%|████████████▍                        | 6.23M/18.5M [00:03<00:02, 4.22MB/s][A
     37%|█████████████▌                       | 6.78M/18.5M [00:04<00:02, 4.60MB/s][A
     40%|██████████████▊                      | 7.40M/18.5M [00:04<00:02, 5.10MB/s][A
     44%|████████████████▏                    | 8.09M/18.5M [00:04<00:01, 5.62MB/s][A
     48%|█████████████████▋                   | 8.83M/18.5M [00:04<00:01, 6.07MB/s][A
     52%|███████████████████▎                 | 9.67M/18.5M [00:04<00:01, 6.73MB/s][A
     57%|█████████████████████                | 10.6M/18.5M [00:04<00:01, 7.37MB/s][A
     62%|███████████████████████              | 11.5M/18.5M [00:04<00:00, 8.03MB/s][A
     68%|█████████████████████████            | 12.6M/18.5M [00:04<00:00, 8.70MB/s][A
     74%|███████████████████████████▎         | 13.7M/18.5M [00:04<00:00, 9.52MB/s][A
     80%|█████████████████████████████▊       | 14.9M/18.5M [00:04<00:00, 10.2MB/s][A
     88%|████████████████████████████████▍    | 16.2M/18.5M [00:05<00:00, 11.1MB/s][A
     95%|███████████████████████████████████▎ | 17.7M/18.5M [00:05<00:00, 12.1MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 15.4GB/s]
    009-2014-WithinSession:  50%|#####     | 1/2 [00:15<00:15, 15.90s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:32, 87.2kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:19, 133kB/s][A
      1%|▏                                      | 101k/18.5M [00:00<01:15, 245kB/s][A
      1%|▎                                      | 132k/18.5M [00:00<01:10, 261kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:11, 257kB/s][A
      1%|▍                                      | 222k/18.5M [00:00<01:02, 295kB/s][A
      2%|▌                                      | 296k/18.5M [00:01<00:44, 407kB/s][A
      2%|▋                                      | 342k/18.5M [00:01<00:43, 421kB/s][A
      2%|▊                                      | 406k/18.5M [00:01<00:37, 481kB/s][A
      2%|▉                                      | 460k/18.5M [00:01<00:36, 489kB/s][A
      3%|█                                      | 525k/18.5M [00:01<00:41, 429kB/s][A
      3%|█▎                                     | 599k/18.5M [00:01<00:35, 504kB/s][A
      4%|█▍                                     | 673k/18.5M [00:01<00:31, 564kB/s][A
      4%|█▌                                     | 768k/18.5M [00:01<00:26, 669kB/s][A
      5%|█▊                                     | 853k/18.5M [00:01<00:24, 708kB/s][A
      5%|██                                     | 968k/18.5M [00:02<00:21, 830kB/s][A
      6%|██▏                                   | 1.07M/18.5M [00:02<00:19, 877kB/s][A
      6%|██▍                                   | 1.17M/18.5M [00:02<00:19, 914kB/s][A
      7%|██▌                                  | 1.30M/18.5M [00:02<00:16, 1.02MB/s][A
      8%|██▊                                  | 1.43M/18.5M [00:02<00:15, 1.10MB/s][A
      8%|███                                  | 1.56M/18.5M [00:02<00:14, 1.16MB/s][A
      9%|███▍                                 | 1.70M/18.5M [00:02<00:13, 1.25MB/s][A
     10%|███▋                                 | 1.87M/18.5M [00:02<00:12, 1.36MB/s][A
     11%|████                                 | 2.02M/18.5M [00:02<00:11, 1.39MB/s][A
     12%|████▍                                | 2.20M/18.5M [00:02<00:10, 1.50MB/s][A
     13%|████▋                                | 2.38M/18.5M [00:03<00:10, 1.59MB/s][A
     14%|█████▏                               | 2.57M/18.5M [00:03<00:09, 1.70MB/s][A
     15%|█████▌                               | 2.78M/18.5M [00:03<00:08, 1.81MB/s][A
     16%|█████▉                               | 2.99M/18.5M [00:03<00:08, 1.88MB/s][A
     17%|██████▍                              | 3.20M/18.5M [00:03<00:07, 1.97MB/s][A
     18%|██████▊                              | 3.41M/18.5M [00:03<00:07, 1.99MB/s][A
     20%|███████▍                             | 3.70M/18.5M [00:03<00:06, 2.25MB/s][A
     21%|███████▉                             | 3.98M/18.5M [00:03<00:06, 2.40MB/s][A
     23%|████████▌                            | 4.31M/18.5M [00:03<00:05, 2.65MB/s][A
     25%|█████████▎                           | 4.67M/18.5M [00:03<00:04, 2.93MB/s][A
     27%|██████████                           | 5.02M/18.5M [00:04<00:04, 3.08MB/s][A
     29%|██████████▉                          | 5.45M/18.5M [00:04<00:03, 3.47MB/s][A
     32%|███████████▊                         | 5.91M/18.5M [00:04<00:03, 3.78MB/s][A
     34%|████████████▋                        | 6.37M/18.5M [00:04<00:03, 4.02MB/s][A
     38%|█████████████▉                       | 6.95M/18.5M [00:04<00:02, 4.52MB/s][A
     41%|███████████████                      | 7.54M/18.5M [00:04<00:02, 4.92MB/s][A
     44%|████████████████▍                    | 8.22M/18.5M [00:04<00:01, 5.47MB/s][A
     48%|█████████████████▊                   | 8.95M/18.5M [00:04<00:01, 6.00MB/s][A
     53%|███████████████████▌                 | 9.77M/18.5M [00:04<00:01, 6.64MB/s][A
     57%|█████████████████████▎               | 10.7M/18.5M [00:04<00:01, 7.30MB/s][A
     63%|███████████████████████▏             | 11.6M/18.5M [00:05<00:00, 8.04MB/s][A
     68%|█████████████████████████▎           | 12.7M/18.5M [00:05<00:00, 8.78MB/s][A
     74%|███████████████████████████▌         | 13.8M/18.5M [00:05<00:00, 9.47MB/s][A
     81%|██████████████████████████████       | 15.0M/18.5M [00:05<00:00, 10.3MB/s][A
     88%|████████████████████████████████▋    | 16.4M/18.5M [00:05<00:00, 11.3MB/s][A
     96%|███████████████████████████████████▋ | 17.8M/18.5M [00:05<00:00, 12.3MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 19.8GB/s]
    009-2014-WithinSession: 100%|##########| 2/2 [00:31<00:00, 16.02s/it]    009-2014-WithinSession: 100%|##########| 2/2 [00:31<00:00, 16.00s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-119

Plot Results
----------------

Here we plot the results to compare the two pipelines

.. GENERATED FROM PYTHON SOURCE LINES 119-138

.. code-block:: default


    fig, ax = plt.subplots(facecolor="white", figsize=[8, 4])

    sns.stripplot(
        data=results,
        y="score",
        x="pipeline",
        ax=ax,
        jitter=True,
        alpha=0.5,
        zorder=1,
        palette="Set1",
    )
    sns.pointplot(data=results, y="score", x="pipeline", ax=ax, zorder=1, palette="Set1")

    ax.set_ylabel("ROC AUC")
    ax.set_ylim(0.5, 1)

    fig.show()



.. image:: /auto_examples/images/sphx_glr_plot_within_session_p300_001.png
    :alt: plot within session p300
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  32.200 seconds)


.. _sphx_glr_download_auto_examples_plot_within_session_p300.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_within_session_p300.py <plot_within_session_p300.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_within_session_p300.ipynb <plot_within_session_p300.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
